use keyboard_types::Code;
use windows::Win32::UI::Input::KeyboardAndMouse::*;

pub fn virtual_key_to_keycode(key: VIRTUAL_KEY) -> Code {
    match key {
        VK_BACK => Code::Backspace,
        VK_TAB => Code::Tab,
        VK_CLEAR => Code::NumpadClear,
        VK_RETURN => Code::Enter,
        VK_SHIFT => Code::ShiftLeft,
        VK_CONTROL => Code::ControlLeft,
        VK_MENU => Code::AltLeft,
        VK_PAUSE => Code::Pause,
        VK_CAPITAL => Code::CapsLock,
        VK_ESCAPE => Code::Escape,
        VK_SPACE => Code::Space,
        VK_PRIOR => Code::PageUp,
        VK_NEXT => Code::PageDown,
        VK_END => Code::End,
        VK_HOME => Code::Home,
        VK_LEFT => Code::ArrowLeft,
        VK_UP => Code::ArrowUp,
        VK_RIGHT => Code::ArrowRight,
        VK_DOWN => Code::ArrowDown,
        VK_SELECT => Code::Select,
        VK_SNAPSHOT => Code::PrintScreen,
        VK_INSERT => Code::Insert,
        VK_DELETE => Code::Delete,
        VK_HELP => Code::Help,
        VK_LWIN => Code::MetaLeft,
        VK_RWIN => Code::MetaRight,
        VK_APPS => Code::ContextMenu,
        VK_SLEEP => Code::Sleep,
        VK_NUMPAD0 => Code::Numpad0,
        VK_NUMPAD1 => Code::Numpad1,
        VK_NUMPAD2 => Code::Numpad2,
        VK_NUMPAD3 => Code::Numpad3,
        VK_NUMPAD4 => Code::Numpad4,
        VK_NUMPAD5 => Code::Numpad5,
        VK_NUMPAD6 => Code::Numpad6,
        VK_NUMPAD7 => Code::Numpad7,
        VK_NUMPAD8 => Code::Numpad8,
        VK_NUMPAD9 => Code::Numpad9,
        VK_MULTIPLY => Code::NumpadMultiply,
        VK_ADD => Code::NumpadAdd,
        VK_SUBTRACT => Code::NumpadSubtract,
        VK_DECIMAL => Code::NumpadDecimal,
        VK_DIVIDE => Code::NumpadDivide,
        VK_F1 => Code::F1,
        VK_F2 => Code::F2,
        VK_F3 => Code::F3,
        VK_F4 => Code::F4,
        VK_F5 => Code::F5,
        VK_F6 => Code::F6,
        VK_F7 => Code::F7,
        VK_F8 => Code::F8,
        VK_F9 => Code::F9,
        VK_F10 => Code::F10,
        VK_F11 => Code::F11,
        VK_F12 => Code::F12,
        VK_F13 => Code::F13,
        VK_F14 => Code::F14,
        VK_F15 => Code::F15,
        VK_F16 => Code::F16,
        VK_F17 => Code::F17,
        VK_F18 => Code::F18,
        VK_F19 => Code::F19,
        VK_F20 => Code::F20,
        VK_F21 => Code::F21,
        VK_F22 => Code::F22,
        VK_F23 => Code::F23,
        VK_F24 => Code::F24,
        VK_NUMLOCK => Code::NumLock,
        VK_SCROLL => Code::ScrollLock,
        VK_OEM_NEC_EQUAL => Code::NumpadEqual,
        VK_LSHIFT => Code::ShiftLeft,
        VK_RSHIFT => Code::ShiftRight,
        VK_LCONTROL => Code::ControlLeft,
        VK_RCONTROL => Code::ControlRight,
        VK_LMENU => Code::AltLeft,
        VK_RMENU => Code::AltRight,
        VK_BROWSER_BACK => Code::BrowserBack,
        VK_BROWSER_FORWARD => Code::BrowserForward,
        VK_BROWSER_REFRESH => Code::BrowserRefresh,
        VK_BROWSER_STOP => Code::BrowserStop,
        VK_BROWSER_SEARCH => Code::BrowserSearch,
        VK_BROWSER_FAVORITES => Code::BrowserFavorites,
        VK_BROWSER_HOME => Code::BrowserHome,
        VK_VOLUME_MUTE => Code::AudioVolumeMute,
        VK_VOLUME_DOWN => Code::AudioVolumeDown,
        VK_VOLUME_UP => Code::AudioVolumeUp,
        VK_MEDIA_NEXT_TRACK => Code::MediaTrackNext,
        VK_MEDIA_PREV_TRACK => Code::MediaTrackPrevious,
        VK_MEDIA_STOP => Code::MediaStop,
        VK_MEDIA_PLAY_PAUSE => Code::MediaPlayPause,
        VK_OEM_1 => Code::Semicolon,
        VK_OEM_COMMA => Code::Comma,
        VK_OEM_MINUS => Code::Minus,
        VK_OEM_PERIOD => Code::Period,
        VK_OEM_2 => Code::Slash,
        VK_OEM_3 => Code::Backquote,
        VK_OEM_4 => Code::BracketLeft,
        VK_OEM_5 => Code::Backslash,
        VK_OEM_6 => Code::BracketRight,
        VK_OEM_7 => Code::Quote,

        _ => Code::Unidentified,
    }
}
